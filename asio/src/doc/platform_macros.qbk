[/
 / Copyright (c) 2003-2023 Christopher M. Kohlhoff (chris at kohlhoff dot com)
 /
 / Distributed under the Boost Software License, Version 1.0. (See accompanying
 / file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
 /]

[heading Compiler/platform feature detection macros]

Asio automatically defines preprocessor macros corresponding to the detected
available features on a particular compiler and target platform. These macros
are named with the prefix `ASIO_HAS_`, and are listed in the table below.

Many of these macros also have a corresponding `ASIO_DISABLE_` macro that may
be used to explicitly disable the feature.

In general, `ASIO_HAS_` macros should not be explicitly defined by the user,
except when absolutely required as a workaround for the latest version of a
compiler or platform. For older compiler/platform combinations where a specific
`ASIO_HAS_` macro is not automatically defined, testing may have shown that a
claimed feature isn't sufficiently conformant to be compatible with Asio's
needs.

[table
  [[Macro][Description][Macro to disable feature]]
  [
    [`ASIO_HAS_CLANG_LIBCXX`]
    [
      Clang / libc++ detection.
    ]
    []
  ]
  [
    [`ASIO_HAS_DEV_POLL`]
    [
      Solaris: /dev/poll.
    ]
    [`ASIO_DISABLE_DEV_POLL`]
  ]
  [
    [`ASIO_HAS_EPOLL`]
    [
      Linux: epoll, eventfd, timerfd and io_uring.
    ]
    [`ASIO_DISABLE_EPOLL`]
  ]
  [
    [`ASIO_HAS_EVENTFD`]
    [
      Linux: epoll, eventfd, timerfd and io_uring.
    ]
    [`ASIO_DISABLE_EVENTFD`]
  ]
  [
    [`ASIO_HAS_FILE`]
    [
      Files.
    ]
    [`ASIO_DISABLE_FILE`]
  ]
  [
    [`ASIO_HAS_GETADDRINFO`]
    [
      Can use getaddrinfo() and getnameinfo().
    ]
    [`ASIO_DISABLE_GETADDRINFO`]
  ]
  [
    [`ASIO_HAS_HANDLER_HOOKS`]
    [
      Handler hooking. Disabled for ancient Borland C++ and gcc compilers.
    ]
    [`ASIO_DISABLE_HANDLER_HOOKS`]
  ]
  [
    [`ASIO_HAS_IOCP`]
    [
      Windows: IO Completion Ports.
    ]
    [`ASIO_DISABLE_IOCP`]
  ]
  [
    [`ASIO_HAS_IO_URING_AS_DEFAULT`]
    [
      Linux: io_uring is used instead of epoll.
    ]
    []
  ]
  [
    [`ASIO_HAS_KQUEUE`]
    [
      Mac OS X, FreeBSD, NetBSD, OpenBSD: kqueue.
    ]
    [`ASIO_DISABLE_KQUEUE`]
  ]
  [
    [`ASIO_HAS_LOCAL_SOCKETS`]
    [
      UNIX domain sockets.
    ]
    [`ASIO_DISABLE_LOCAL_SOCKETS`]
  ]
  [
    [`ASIO_HAS_MSG_NOSIGNAL`]
    [
      Kernel support for MSG_NOSIGNAL.
    ]
    []
  ]
  [
    [`ASIO_HAS_PIPE`]
    [
      Pipes.
    ]
    [`ASIO_DISABLE_PIPE`]
  ]
  [
    [`ASIO_HAS_POSIX_STREAM_DESCRIPTOR`]
    [
      POSIX: stream-oriented file descriptors.
    ]
    [`ASIO_DISABLE_POSIX_STREAM_DESCRIPTOR`]
  ]
  [
    [`ASIO_HAS_PTHREADS`]
    [
      POSIX threads.
    ]
    []
  ]
  [
    [`ASIO_HAS_SECURE_RTL`]
    [
      Microsoft Visual C++'s secure C runtime library.
    ]
    [`ASIO_DISABLE_SECURE_RTL`]
  ]
  [
    [`ASIO_HAS_SERIAL_PORT`]
    [
      Serial ports.
    ]
    [`ASIO_DISABLE_SERIAL_PORT`]
  ]
  [
    [`ASIO_HAS_SIGACTION`]
    [
      Can use sigaction() instead of signal().
    ]
    [`ASIO_DISABLE_SIGACTION`]
  ]
  [
    [`ASIO_HAS_SIGNAL`]
    [
      Can use signal().
    ]
    [`ASIO_DISABLE_SIGNAL`]
  ]
  ]
  [
    [`ASIO_HAS_SOURCE_LOCATION`]
    [
      Standard library has a source_location that we can use.
    ]
    [`ASIO_DISABLE_SOURCE_LOCATION`]
  ]
  [
    [`ASIO_HAS_SSIZE_T`]
    [
      Support for POSIX ssize_t typedef.
    ]
    [`ASIO_DISABLE_SSIZE_T`]
  ]
  [
    [`ASIO_HAS_THREADS`]
    [
      Threads.
    ]
    [`ASIO_DISABLE_THREADS`]
  ]
  [
    [`ASIO_HAS_THREAD_KEYWORD_EXTENSION`]
    [
      Support for the __thread keyword extension, or equivalent.
    ]
    [`ASIO_DISABLE_THREAD_KEYWORD_EXTENSION`]
  ]
  [
    [`ASIO_HAS_TIMERFD`]
    [
      Linux: epoll, eventfd, timerfd and io_uring.
    ]
    []
  ]
  [
    [`ASIO_HAS_UNISTD_H`]
    [
      On POSIX (and POSIX-like) platforms we need to include unistd.h in order to
      get access to the various platform feature macros, e.g. to be able to test
      for threads support.
    ]
    []
  ]
  [
    [`ASIO_HAS_WINDOWS_OBJECT_HANDLE`]
    [
      Windows: object handles.
    ]
    [`ASIO_DISABLE_WINDOWS_OBJECT_HANDLE`]
  ]
  [
    [`ASIO_HAS_WINDOWS_OVERLAPPED_PTR`]
    [
      Windows: OVERLAPPED wrapper.
    ]
    [`ASIO_DISABLE_WINDOWS_OVERLAPPED_PTR`]
  ]
  [
    [`ASIO_HAS_WINDOWS_RANDOM_ACCESS_HANDLE`]
    [
      Windows: random access handles.
    ]
    [`ASIO_DISABLE_WINDOWS_RANDOM_ACCESS_HANDLE`]
  ]
  [
    [`ASIO_HAS_WINDOWS_STREAM_HANDLE`]
    [
      Windows: stream handles.
    ]
    [`ASIO_DISABLE_WINDOWS_STREAM_HANDLE`]
  ]
]
